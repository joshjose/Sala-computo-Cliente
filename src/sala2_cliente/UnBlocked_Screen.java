/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sala2_cliente;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 *
 * @author josue
 */
public class UnBlocked_Screen extends javax.swing.JFrame {
 Sala2_cliente con =new Sala2_cliente();
    
    //chrono
    public Timer t;
    public int Nlap=0;  
    public ListData objDatsLista;
    public int size = 1;
    public Object []objtime;
    public String chronometro;
    
    
            
    public UnBlocked_Screen( ) {
        initComponents();
    }
    public UnBlocked_Screen( String ncontrol, String Num ){
        initComponents();
    jl_ncontrol.setText(ncontrol);
    jl_comp.setText(Num);
    t = new Timer(1000, acciones);
    objtime = new Object[size];

    jp_chrono.setPreferredSize(new Dimension(250,100));// changed it to preferredSize, Thanks!
    btnStart();
    con.b_connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp_chrono = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        log_out = new javax.swing.JButton();
        jl_ncontrol = new javax.swing.JLabel();
        jl_time = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jl_comp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jp_chrono.setBackground(new java.awt.Color(255, 153, 51));
        jp_chrono.setPreferredSize(new java.awt.Dimension(250, 100));
        jp_chrono.setRequestFocusEnabled(false);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("NÂº Control:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Tiempo:");

        log_out.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        log_out.setText("LOG OUT");
        log_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                log_outActionPerformed(evt);
            }
        });

        jl_ncontrol.setText("xxxxxxxxxx");

        jl_time.setText("xx:xx:xx");

        jLabel1.setText("Comutadora:");

        jl_comp.setText("X");

        javax.swing.GroupLayout jp_chronoLayout = new javax.swing.GroupLayout(jp_chrono);
        jp_chrono.setLayout(jp_chronoLayout);
        jp_chronoLayout.setHorizontalGroup(
            jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_chronoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(log_out, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jp_chronoLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3)))
                        .addGap(18, 18, 18)
                        .addGroup(jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp_chronoLayout.createSequentialGroup()
                                .addGroup(jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jl_ncontrol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jl_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(47, 47, 47))
                            .addGroup(jp_chronoLayout.createSequentialGroup()
                                .addComponent(jl_comp)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jp_chronoLayout.setVerticalGroup(
            jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_chronoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jl_ncontrol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jl_comp))
                .addGap(11, 11, 11)
                .addGroup(jp_chronoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jl_time))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(log_out)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_chrono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_chrono, javax.swing.GroupLayout.PREFERRED_SIZE, 119, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
       
    
    private void log_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_log_outActionPerformed
        btnEnd();     
        con.b_end(jl_ncontrol.getText(),jl_comp.getText());
        
         
         Blocked_Screen bs =new Blocked_Screen();
         bs.setVisible(true);
        this.dispose();
                
        
       
    }//GEN-LAST:event_log_outActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnBlocked_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnBlocked_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnBlocked_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnBlocked_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UnBlocked_Screen().setVisible(true);
            }
        });
    }
    
    ///______chronograma____///
    
     private int h, m, s;
    private ActionListener acciones = new ActionListener(){

        @Override
        public void actionPerformed(ActionEvent ae) {
            ++s; 
            
            if(s==60) 
            {
                s = 0;
                ++m;
            }
            if(m==60)
            {
                m = 0;
                ++h;
            }
            actualizarLabel();
        }
        
    };
    
    private void actualizarLabel() {
        String tiempo = (h<=9?"0":"")+h+":"+(m<=9?"0":"")+m+":"+(s<=9?"0":"")+s;
        jl_time.setText(tiempo);
      
    }
    
    private void btnStart() {                                         

        t.start();
      
    } 

    private void btnEnd() {                                         
      
        
         t.stop();
        chronometro= jl_time.getText();
         h=0; m=0; s=0;
        actualizarLabel();
        for(int i=0; i<=Nlap; i++) {
                    objtime[i] = null;
                }
                Nlap = 0;
                size = 1;
                jl_time.removeAll();
        
        
       
           
    } 
    public class ListData {
        private int index;
        private String valor;
        private String diferencia;

        public ListData() {
        }

        public ListData(int index, String valor, String diferencia) {
            this.index = index;
            this.valor = valor;
            this.diferencia = diferencia;
        }

        public int getIndex() {
            return index;
        }

        public void setIndex(int index) {
            this.index = index;
        }

        public String getValor() {
            return valor;
        }

        public void setValor(String valor) {
            this.valor = valor;
        }

        public String getDiferencia() {
            return diferencia;
        }

        public void setDiferencia(String diferencia) {
            this.diferencia = diferencia;
        }

        public String toString(){
            return "   " + index + ")   " + valor + " - " + diferencia;
        }
    }
  
     
       public String CalculateLap(String actual, String anterior) {
            String parcial = "";
            String act[] = actual.split("");
            String ant[] = anterior.split("");
            String aux1, aux2;
            aux1 = aux2 = "";
            int m = 0, h = 0;
            for(int i=actual.length(); i>0; i--) {
                if(act[i].charAt(0)!= ':') {
                    aux1 = aux1 + act[i];
                    aux2 = aux2 + ant[i];
                }
                if(act[i].charAt(0)== ':' || (i-1)==0) {
                    String au = "";
                    String au1 = "";
                    String var1[] = aux1.split("");
                    String var2[] = aux2.split("");   

                    //corregimos las posiciones correspondientes de los numeros
                    for(int j=aux1.length(); j>0; j--) {
                        au = au + var1[j];
                        au1 = au1 + var2[j];
                    }

                    //numeros 
                    int an = 0, ac = 0;

                    try {
                        ac = Integer.parseInt(au);
                        an = Integer.valueOf(au1);
                    } catch (Exception e) {}

                    //comparamos si el segundo del tiempo 1 es mayor que el del tiempo 2
                    int a = 0;
                    if(i==6) {
                        if(an == ac) {
                            a = 0;
                        } else if(an >= ac) {
                            a = 60 - an;
                            m++;
                            a = a + ac;
                        } else {
                            a = ac - an;
                        }
                        if(a >= 60) {
                            m++;
                            a = a - 60;
                        }
                    }

                    //verifica los minutos, qe sean los correspondientes
                    if(i==3) {
                        if(an == ac) {
                            a = 0;
                        } else if(an > ac) {
                            a = 60 - an;
                            h++;
                            a = a + ac;
                        } else {
                            a = ac - an;
                        }
                        if(m!=0){
                            a = a - m;
                            m = 0;
                        }
                        if(a >= 60) {
                            h++;
                            a = a - 60;
                        }
                    }
                    if(i==1) {
                        a = ac - an;
                    }
                    int abs = a;
                    a = ac = an = 0;
                    String var3 = "";
                    if(abs < 10)
                       var3 = "0" + abs;
                    else
                       var3 = "" + abs;
                    parcial = parcial + var3;

                    //verifica si se tiene qe colocar los 2 puntos
                    if((i-1) > 0)
                       parcial = parcial + ":";
                    aux1 = aux2 = "";
                }
            }
            String aux = "";
            String var4[] = parcial.split("");
            String aux3 = "", aux4 = "";
            for(int i = parcial.length(); i>0; i--) {
                if(var4[i].charAt(0) != ':') {
                    aux3 = aux3 + var4[i];
                }
                if(var4[i].charAt(0) == ':' || (i-1)==0) {
                    String []varAux = aux3.split("");
                    for(int j=aux3.length(); j>0; j--) {
                        aux = aux + varAux[j];
                    }
                    aux4 = aux4 + aux;
                    if((i-1) > 0)
                        aux4 = aux4 + ":";
                    aux3 = "";
                    aux = "";
                }
            }
            parcial = aux4;
            return parcial;
        }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jl_comp;
    private javax.swing.JLabel jl_ncontrol;
    private javax.swing.JLabel jl_time;
    private javax.swing.JPanel jp_chrono;
    private javax.swing.JButton log_out;
    // End of variables declaration//GEN-END:variables
}
